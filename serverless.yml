service: rust-lambda

provider:
  name: aws
  runtime: rust
  environment:
    TABLE_NAME: ${self:custom.tableName}
  stage: dev
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        # Restrict our IAM role permissions to
        # the specific table for the stage
      Resource:
        - "Fn::GetAtt": [ GroupTable, Arn ]
  logs:
    restApi: true

plugins:
    - serverless-rust
    #  serverless-dotenv-plugin
    - serverless-localstack

custom:
  rust:
    dockerTag: '0.2.7-rust-1.43.0'
  localstack:
    stages:
      - local
    autostart: true
    lambda:
      # Enable this flag to improve performance
      mountCode: True
  stage: ${opt:stage, self:provider.stage}
  tableName: ${self:custom.stage}-GroupTable

package:
    individually: true

functions:
  receive_call:
    handler: receive_call
    events:
      - http:
          path: /receive_call
          method: POST
  test_lambda:
    handler: test_lambda
    events:
      - http:
          path: /test_lambda
          method: GET

resources:
  - ${file(resources/dynamodb-table.yml)}
  - ${file(resources/cognito_user_pool.yml)}
